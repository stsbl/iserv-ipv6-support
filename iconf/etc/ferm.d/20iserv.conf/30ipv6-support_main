domain (ip6) {
  table filter {
    chain INPUT {
      mod set set iserv-portal-lan6 src jump input_lan;
    }

    chain FORWARD {
      jump forward_first;

      proto tcp tcp-flags (SYN RST) SYN TCPMSS clamp-mss-to-pmtu;
      mod conntrack ctstate INVALID DROP;

      interface tun+ ACCEPT;
      outerface tun+ ACCEPT;

      interface $DEFIF6 mod set ! set iserv-portal-lan6 src jump forward_in;

      # We need to jump to inet_in BEFORE forward_white to prevent abuse of rules
      # from there for accessing resources in local networks from internet (e.g.
      # if a rule without source and target restriction is in forward_white).
      # forward_white is not intented for whitelisting access from internet to
      # local networks, rather than whitelisting targetsi for local networks
      # that must be even reachable if proxy is enforced or internet access
      # is blocked. You explicitly have to use the forward_in chain for this
      # purpose.
      interface $DEFIF6 jump inet_in;

      proto tcp syn dport smtp NFLOG nflog-group 1;
      proto tcp syn dport https NFLOG nflog-group 2;

      jump forward_white;
      outerface $DEFIF6 jump inet_out;
    }

    chain forward_first {
    }

    chain forward_in {
    }

    chain forward_white {
      proto tcp dport (http https) mod set set iserv-portal-always_direct6 dst ACCEPT;
      proto tcp dport (http https) mod set set iserv-portal-forward_white6 dst ACCEPT;
      proto (icmp ipv6-icmp) mod set set iserv-portal-ns6 dst mod u32 u32 '0x3&0x40=0x40' ACCEPT;
      proto udp sport ntp dport ntp mod length length 76 ACCEPT;
      # Allow ICMP access to DEFIF network to ensure that PMTU discovery works
      proto (icmp ipv6-icmp) outerface $DEFIF ACCEPT;
    }

    chain input_lan {
      proto tcp dport (domain domain-s netbios-ssn microsoft-ds ipp 4447 4448) ACCEPT;
      proto udp dport (domain domain-s ntp netbios-ns netbios-dgm radius mdns) ACCEPT;
      # Only allow DHCPv6 server on interfaces where it is enabled in config
      proto tcp dport (3128 3129 13128 13129) jump input_squid;
    }

    # Before allowing connections to Squid, check if correct network was used
    # as source to prevent abuse of foreign networks by clients.
    chain input_squid {
      jump ipv6_if_filter;
      ACCEPT;
    }

    chain inet_in {
      mod set set iserv-portal-lan6 src RETURN;
      # Reject NEW and INVALID packets from internet
      mod state state (INVALID NEW) REJECT reject-with icmp6-adm-prohibited;
      ACCEPT;
    }

    chain inet_out {
      mod set set iserv-portal-lan6 dst RETURN;
      jump activation_out;
    }

    chain activation_out {
      @if $activation {
        # Allow packets to the internet from clients which have been granted
        # internet access.
        mod set set iserv-ipv6-support-forward src jump activation_check;
      }
    }

    # Before allowing connections to internet, check if correct network was used
    # as source to prevent abuse of foreign networks by clients.
    chain activation_check {
      jump ipv6_if_filter;
      ACCEPT;
    }
  }

  table nat {
    chain PREROUTING {
      jump forward_proxy;
      @if $activation {
        daddr @ipfilter($IPS6) jump redirect_proxy;
      }
    }

    chain POSTROUTING {
      # SNAT for unique local IPv6 LAN
      @if $UniqueLocalLAN {
        outerface $DEFIF saddr @ipfilter($UniqueLocalLAN) jump MASQUERADE;
      }
    }

    chain prerouting_first {

    }

    chain forward_proxy {
      daddr @ipfilter($IPS6) RETURN;

      interface ppp+ RETURN;
      interface tun+ RETURN;

      proto tcp dport http mod set set iserv-portal-always_direct6 dst ACCEPT;

      @if $activation {
        # Redirect http requests from clients which have been granted internet
        # access to Squid.
        mod set set iserv-ipv6-support-forward src proto tcp dport http REDIRECT to-ports 3129;
        mod set set iserv-ipv6-support-proxyonly src proto tcp dport http REDIRECT to-ports 3129;
        # Redirect http requests from everyone else to Squid block honeypot
        # instance.
        proto tcp dport http REDIRECT to-ports 13129;
      } @else {
        # Redirect http requests from everyone to regular Squid if activation
        # was disabled in IServ configuration.
        proto tcp dport http REDIRECT to-ports 3129;
      }
    }

    chain redirect_proxy {
      # Redirect direct access to Squid from clients without internet access to
      # block honeypot instance.
      interface ppp+ RETURN;
      interface tun+ RETURN;

      mod set set iserv-ipv6-support-proxyonly src RETURN;
      mod set set iserv-ipv6-support-forward src RETURN;

      # Do not treat foreign traffic
      daddr @ipfilter($IPS6) jump redirect_proxy_intercept;
    }

    chain redirect_proxy_intercept {
      proto tcp dport 3129 REDIRECT to-ports 13129;
      proto tcp dport 3128 REDIRECT to-ports 13128;
    }

  }
}

