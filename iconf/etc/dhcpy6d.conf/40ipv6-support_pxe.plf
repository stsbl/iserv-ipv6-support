#!/usr/bin/perl -CSDAL

use warnings;
use strict;
use IServ::Conf;

# exit early if pxe module isn't installed
print <STDIN> and exit if not -f "/var/lib/dpkg/info/iserv-pxe.list";

my $ips = {};

my @interfaces;
if (grep $_ eq "*", @{ $conf->{DHCP} })
{
  @interfaces = split /\n/, qx(netquery6 -lu "nic");
}
else
{
  @interfaces = @{ $conf->{DHCP} };
}

for my $row (split /\n/, qx(netquery6 -lu "nic\tip"))
{
  my ($nic, $ip) = split /\t/, $row;
  $ips->{$nic} = $ip if grep $_ eq $nic, @interfaces;
}

while (<STDIN>)
{
  if (/^\[class_default_(.+)\]$/ and exists $ips->{$1})
  {
    print;
    print "bootfiles = $1_ipxe $1_efi64 $1_efi32 $1_efibc\n";
    next;
  }
  print;
}

print "\n";
for my $nic (sort keys %{ $ips })
{
  print "[bootfile_${nic}_ipxe]\n";
  print "user_class = iPXE\n";
  print "bootfile_url = tftp://[" . ${ips}->{$nic} . "]/default.ipxe\n";
  print "\n";

  print "[bootfile_${nic}_efi32]\n";
  print "client_architecture = 0006\n";
  print "bootfile_url = tftp://[" . ${ips}->{$nic} . "]/efi32/ipxe-snponly.efi\n";
  print "\n";
  print "[bootfile_${nic}_efibc]\n";
  print "client_architecture = 0007\n";
  print "bootfile_url = tftp://[" . ${ips}->{$nic} . "]/efi64/ipxe-snponly.efi\n";
  print "\n";
  print "[bootfile_${nic}_efi64]\n";
  print "client_architecture = 0009\n";
  print "bootfile_url = tftp://[" . ${ips}->{$nic} . "]/efi32/ipxe-snponly.efi\n";
  print "\n";
}
