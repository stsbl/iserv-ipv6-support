#!/usr/bin/python3

"""
Generate a list of IPv6 ALU(Unique Local Addresses).
"""

from ipaddress import IPv6Address
from random import sample
from os import urandom

amount = 100 # amount to generate

def b2a(some_bytes):
    """Bytes to ascii"""
    return "".join(["{:02x}".format(c) for c in some_bytes])

# IPv6 Unique Local Address(ULA) format RFC 4193
#  1  2    3  4    5  6    7  8    9  10   11 12   13 14   15 16
#  xx yy : yy yy : yy yy : zz zz : hh hh : hh hh : hh hh : hh hh 
#  x => ULA prefix
#  y => ROUTING prefix
#  z => NETWORK
#  h => HOST BITS
#
# https://www.rfc-editor.org/rfc/rfc4193.txt
#+--------+-+------------+-----------+----------------------------+
#| 7 bits |1|  40 bits   |  16 bits  |          64 bits           |
#+--------+-+------------+-----------+----------------------------+
#| Prefix |L| Global ID  | Subnet ID |        Interface ID        |
#+--------+-+------------+-----------+----------------------------+

PREFIX = 0xFC # FC00::/7 prefix to identify Local IPv6 unicast addresses
L = 0x1       # L is set to 1 if the prefix is locally assigned.
              # (0 may be defined in the future)

FIRST_BYTE = bytes([PREFIX | L]) # 0xFD             # | 7 bits |1|
GLOBAL_ID = b'\x00\x00\x00\x00\x00'                 # | 40 bits  |  
INTERFACE_ID =  b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' # | 64 bits  |

# Generate the Global ID and the Subnet ID.
GLOBAL_ID = urandom(5)

address_set = set()
for i in range(amount):
    ipaddr = IPv6Address(FIRST_BYTE + GLOBAL_ID + INTERFACE_ID)
    address_set.add(ipaddr)

print(sample(tuple(address_set), 1)[0])
